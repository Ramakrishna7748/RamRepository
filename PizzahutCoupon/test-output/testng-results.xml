<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-21T11:52:32 IST" name="Default suite" finished-at="2022-11-21T11:54:26 IST" duration-ms="113490">
    <groups>
    </groups>
    <test started-at="2022-11-21T11:52:32 IST" name="Default test" finished-at="2022-11-21T11:54:26 IST" duration-ms="113490">
      <class name="com.test.pizzahut.Test1">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:52:32 IST" name="setExtent" finished-at="2022-11-21T11:52:32 IST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:52:32 IST" name="initialization" finished-at="2022-11-21T11:52:47 IST" duration-ms="14966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="m1()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:52:47 IST" name="m1" finished-at="2022-11-21T11:53:02 IST" duration-ms="15044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:53:02 IST" name="AfterMethod" finished-at="2022-11-21T11:53:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:53:02 IST" name="initialization" finished-at="2022-11-21T11:53:14 IST" duration-ms="11042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="m2()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:53:14 IST" name="m2" finished-at="2022-11-21T11:53:33 IST" duration-ms="19822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:53:33 IST" name="AfterMethod" finished-at="2022-11-21T11:53:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:53:33 IST" name="initialization" finished-at="2022-11-21T11:53:46 IST" duration-ms="12512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="m3()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:53:46 IST" name="m3" finished-at="2022-11-21T11:54:01 IST" duration-ms="15071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m3 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:54:01 IST" name="AfterMethod" finished-at="2022-11-21T11:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:54:01 IST" name="initialization" finished-at="2022-11-21T11:54:12 IST" duration-ms="11557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="m4()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:54:12 IST" name="m4" finished-at="2022-11-21T11:54:26 IST" duration-ms="13185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m4 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:54:26 IST" name="AfterMethod" finished-at="2022-11-21T11:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.test.pizzahut.Test1@5852c06f]" started-at="2022-11-21T11:54:26 IST" name="endReport" finished-at="2022-11-21T11:54:26 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[No reporters were started. Atleast 1 reporter must be started to flush results.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: No reporters were started. Atleast 1 reporter must be started to flush results.
at com.aventstack.extentreports.Report.flush(Report.java:182)
at com.aventstack.extentreports.ExtentReports.flush(ExtentReports.java:281)
at com.test.pizzahut.Test1.endReport(Test1.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.afterRun(TestRunner.java:877)
at org.testng.TestRunner.run(TestRunner.java:599)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.test.pizzahut.Test1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
